{"version":3,"sources":["../index.js"],"names":["db","twentyei","fs","require","login","loginOptions","appState","JSON","parse","readFileSync","err","chat","console","error","writeFileSync","stringify","getAppState","setOptions","listenEvents","logLevel","updatePresence","listen","message","updateCounter","type","threadExists","threadID","then","exists","getThreadInfo","info","isGroup","isCanonical","createThreadDoc","sendMessage","mentions","botName","sendTypingIndicator","process"],"mappings":";;AAUA;;IAAYA,E;;AACZ;;IAAYC,Q;;;;;;AAXZ;;;;;;;AAOA,IAAMC,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,QAAQD,QAAQ,mBAAR,CAAd;;AAKA;;;;AAIA,IAAME,eAAe;AACjBC,cAAUC,KAAKC,KAAL,CAAWN,GAAGO,YAAH,CAAgB,yBAAhB,EAA2C,MAA3C,CAAX;AADO,CAArB;;AAIAL,MAAMC,YAAN,EAAoB,UAACK,GAAD,EAAMC,IAAN,EAAe;AAC/B,QAAID,GAAJ,EAAS,OAAOE,QAAQC,KAAR,CAAcH,GAAd,CAAP;;AAET;AACAR,OAAGY,aAAH,CAAiB,yBAAjB,EAA4CP,KAAKQ,SAAL,CAAeJ,KAAKK,WAAL,EAAf,CAA5C;;AAEAL,SAAKM,UAAL,CAAgB;AACZC,sBAAc,IADF;AAEZC,kBAAU,SAFE;AAGZC,wBAAgB;AAHJ,KAAhB;;AAMAT,SAAKU,MAAL;AAAA,2EAAY,kBAAOX,GAAP,EAAYY,OAAZ;AAAA;AAAA;AAAA;AAAA;AACRtB,+BAAGuB,aAAH;;AAEA,gCAAID,QAAQE,IAAR,KAAiB,SAArB,EAAgC;AAC5B;AACAxB,mCAAGyB,YAAH,CAAgBH,QAAQI,QAAxB,EACKC,IADL,CACU,kBAAU;AACZ,wCAAI,CAACC,MAAL,EAAa;AACTjB,6CAAKkB,aAAL,CAAmBP,QAAQI,QAA3B,EAAqC,UAAChB,GAAD,EAAMoB,IAAN,EAAe;AAChD,gDAAIC,UAAU,CAACD,KAAKE,WAApB;AACAhC,+CAAGiC,eAAH,CAAmBX,QAAQI,QAA3B,EAAqCK,OAArC;AACH,yCAHD;;AAKApB,6CAAKuB,WAAL,CAAiB,oIAAjB;AACH;AACJ,iCAVL;;AAYA;AACA,oCAAIZ,QAAQa,QAAR,CAAiB,eAAjB,MAAsClC,SAASmC,OAAnD,EAA4D;AACxDzB,yCAAK0B,mBAAL,CAAyBf,QAAQI,QAAjC;AAAA,4GAA2C,iBAAOhB,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEACjCT,SAASqC,OAAT,CAAiB3B,IAAjB,EAAuBW,OAAvB,CADiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA3C;;AAAA;AAAA;AAAA;AAAA;AAGH;AACJ;;AAvBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA;AAyBH,CArCD","file":"index.js","sourcesContent":["/**\n * Twentyei v2 (re-written from scratch!)\n * Created by Sanil Chawla on 11/18/17.\n * ===\n * Execute \"login.js\" before running this script.\n */\n\nconst fs = require('fs');\nconst login = require(\"facebook-chat-api\");\n\nimport * as db from \"./lib/db-functions\";\nimport * as twentyei from \"./lib/twentyei\";\n\n/**\n * Facebook login information\n * @type {{email: *, password: *}}\n */\nconst loginOptions = {\n    appState: JSON.parse(fs.readFileSync('./private/appState.json', 'utf8'))\n};\n\nlogin(loginOptions, (err, chat) => {\n    if (err) return console.error(err);\n\n    // Write new appState\n    fs.writeFileSync('./private/appState.json', JSON.stringify(chat.getAppState()));\n\n    chat.setOptions({\n        listenEvents: true,\n        logLevel: \"verbose\",\n        updatePresence: true\n    });\n\n    chat.listen(async (err, message) => {\n        db.updateCounter();\n\n        if (message.type === \"message\") {\n            // Add thread to Firebase if not already present\n            db.threadExists(message.threadID)\n                .then(exists => {\n                    if (!exists) {\n                        chat.getThreadInfo(message.threadID, (err, info) => {\n                            let isGroup = !info.isCanonical;\n                            db.createThreadDoc(message.threadID, isGroup);\n                        });\n\n                        chat.sendMessage(\"Hi there! I'm Twentyei, and I'm here to make this chat more useful and fun. Tag me (@Twentyei) and send a message to chat with me!\")\n                    }\n                });\n\n            // Check if Twentyei has been mentioned\n            if (message.mentions[100011665261574] === twentyei.botName) {\n                chat.sendTypingIndicator(message.threadID, async (err) => {\n                    await twentyei.process(chat, message);\n                });\n            }\n        }\n    });\n});"]}